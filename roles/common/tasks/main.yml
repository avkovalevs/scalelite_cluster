---
# tasks file for common
- name: "Common | Update /etc/hosts file"
  blockinfile:
    dest: /etc/hosts
    content: "{{ lookup('template', 'hosts.j2') }}"
    state: present
  tags: common

- name: "Common | Change ssh_config parameter StrictHostKeyChecking to no"
  lineinfile:
    path: /etc/ssh/ssh_config
    regexp: '^StrictHostKeyChecking'
    line: 'StrictHostKeyChecking = no'
    state: present
  tags: common

#- sysctl:
#    name: net.ipv6.conf.all.disable_ipv6
#    value: '1'
#    state: present
#  tags: common

#- sysctl:
#    name: net.ipv6.conf.default.disable_ipv6
#    value: '1'
#    state: present
#  tags: common

#- sysctl:
#    name: net.ipv6.conf.lo.disable_ipv6
#    value: '1'
#    state: present
#  tags: common

- name: "Common | Install system packages"
  apt:
    name: "{{ packages }}"
    force_apt_get: true
  vars:
    packages:
    - nmap
    - curl
    - wget
    - nmon
    - software-properties-common
    - apt-transport-https
    - ca-certificates
    - language-pack-en
    - openjdk-8-jdk
    - ufw
    - nfs-common
  tags: common

- name: "Docker | Add Docker GPG apt Key"
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  tags: common,docker

- name: "Docker | Add Docker Repository"
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu xenial stable
    state: present
  tags: common,docker

- name: "Docker | Install docker packages"
  apt:
    name: "{{ packages }}"
    force_apt_get: true
  vars:
    packages:
    - docker-ce
    - docker-ce-cli
    - containerd.io
  tags: common,docker

- name: Install docker-compose
  get_url: 
    url : https://github.com/docker/compose/releases/download/1.25.5/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: 'u+x,g+x'
  tags: common,docker

- name: "UFW | Configure ufw default policy"
  ufw: direction={{ item.direction }} policy={{ item.policy }}
  with_items:
    - { direction: 'incoming', policy: 'deny' }
    - { direction: 'outgoing', policy: 'allow' }
  tags: common,ufw

- name: "UFW | Allow TCP ports 80, 443, 53, ssh-nonedefault"
  ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
  with_items:
  - '80'
  - '443'
  - '53'
  - '{{ ansible_port }}'
  tags: common,ufw

- name: "UFW | Allow UDP port range 16384:32768"
  ufw:
    rule: allow
    port: 16384:32768
    proto: udp
  tags: common,ufw
 
- name: "UFW | Enable ufw logging"
  ufw: logging=on
  tags: common,ufw
 
#- name: "UFW | Enable ufw"
#  ufw:
#    state: enabled 
#  tags: common,ufw

- name: "NFS | Make sure /mnt/scalelite-recordings dir exist on targets"
  stat:
    path: "/mnt/scalelite-recordings"
  register: stat_result
  tags: common,nfs

- name: "NFS | Create /mnt/scalelite-recordings if not exist"
  file:
    path: "/mnt/scalelite-recordings"
    state: directory
    mode: 0755
  when: not stat_result.stat.exists
  tags: common,nfs

- name: "NFS | Mount NFS share on targets"
  mount:
    path: "/mnt/scalelite-recordings"
    src: "3.22.92.68:/mnt/scalelite-recordings"
    fstype: nfs
    state: mounted
  tags: common,nfs
...
